name: Deploy

on:
  push:
    branches:
      - main
      - deploy

    paths:
      - .github/**
      - deploy/**
      - checker/package.json
      - checker/package-lock.json
      - checker/src/**

concurrency:
  group: pinger
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - uses: actions/checkout@v3

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Setup cache
      - name: ‚ö°Ô∏è Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: üîë Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üê≥ Docker build
        uses: docker/build-push-action@v3
        with:
          context: ./checker
          push: true
          tags: fictionaldev/pinger:stage
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: üöö Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache


  k8s-config:
    name: k8s config
    runs-on: ubuntu-latest
    environment: Staging
    needs:
      - build
    steps:
      - name: Digitalocean login
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save Digitalocean k8s config
        run: doctl kubernetes cluster kubeconfig save ficdev

      - name: Create namespace
        run: kubectl create namespace pinger || true

  deploy:
    runs-on: ubuntu-latest
    environment: Staging
    needs:
      - k8s-config
    steps:
      - uses: actions/checkout@v3

      - name: Digitalocean login
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save Digitalocean k8s config
        run: doctl kubernetes cluster kubeconfig save ficdev

      - name: Apply k8s configs
        run: kubectl -n=pinger apply -f deploy

      - name: Restart deployment
        run: kubectl -n=pinger rollout restart deployment pinger-deployment